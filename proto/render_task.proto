package pentatope;

// A description of rendering a single frame.
// Contains scene description, camera, output image, etc.
message RenderTask {
    // "cornell": hardcoded Cornell box-like scene.
    // (Bunch of spheres in a tesseract)
    optional string scene_name = 1;

    // Average number of samples / px.
    // Note that actual # of samples can vary depending
    // on sampling scheme.
    optional uint32 sample_per_pixel = 2;

    // A camera (and output image) to use for this render.
    optional CameraConfig camera = 3;
}

// A camera type, pose, blur, tonemap, output image, etc.
message CameraConfig {
    // "perspective2": 2-d sliced perspective point camera.
    optional string camera_type = 1;

    // transform to determine camera pose in the world coordinate.
    optional RigidTransform local_to_world = 5;

    // what's normally called width.
    // must be > 0.
    optional uint32 size_x = 2;

    // what's normally called height.
    // must be > 0.
    optional uint32 size_y = 3;

    // field of view in degree
    // only applicable to perspective camera_type
    optional float fov_x = 6;
    optional float fov_y = 7;
}

// 4-d rigid transform (= SE(4))
// transform(x) = rotation * x + translation
message RigidTransform {
    // row-major 4x4 rotation matrix.
    // must have 16 elements, and the matrix
    // is a proper rotation matrix (det==1).
    // 0 1 2 3
    // ...
    // ...  15
    repeated float rotation = 1 [packed=true];

    // 4-element translation vector.
    repeated float translation = 2 [packed=true];
}
