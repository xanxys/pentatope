package pentatope;
import "render_task.proto";


message RenderRequest {
	// Task to be run on the server.
	// task.scene will be ignored if (scene_id is specified and scene is cached).
	required RenderTask task = 1;

	// If set && the scene is cached, override task.scene with the cache.
	// If set && not cached, cache task.scene and use it.
	// If not set, use task.scene and don't cache.
	//
	// Note that the server can chose when to expire the scene.
	//
	// It is client's responsibility to make sure task.scene is the same for same scene_id.
	// When unsure, unset scene_id.
	optional uint64 scene_id = 2;
}

message RenderResponse {
	enum Status {
		// Successful. output is available.
		SUCCESS = 0;

		// Happens when (task.scene is not set and (scene_id is not cached or not supplied)).
		SCENE_UNAVAILABLE = 1;

		// Some rendering related error occurred.
		RENDERING_ERROR = 2;
	}
	required Status status = 4;

	// Optional human-readable error message.
	// Don't fill this field when status==SUCCESS.
	// Also don't use this field to add machine-readable status code.
	optional string error_message = 2;

	// Output blob. Typically image.
	optional bytes output = 3;

	// Deprecated fields.
	optional bool deprecated_is_ok = 1;
}
